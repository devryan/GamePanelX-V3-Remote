#!/bin/bash
#
# GamePanelX
# Remote scripts v3.0.14
#
# Update configuration file with server values
#
# Example: ./ConfigUpdate -f "css/cstrike/cfg/server.cfg" -s '=' -u user1 -i 1.2.3.4 -p 27015 ...
#
cfg_file=
cfg_sep=
cfg_key_ip=
cfg_key_port=
cfg_key_map=
cfg_key_maxpl=
cfg_key_rcon=
cfg_key_hostn=
cfg_key_passw=
cfg_val_ip=
cfg_val_port=
cfg_val_map=
cfg_val_maxpl=
cfg_val_rcon=
cfg_val_hostn=
cfg_val_passw=

# while getopts "X:c:s:u:i:p:d:e:f:g:h:j:k:L:m:n:O:q:r:t:" OPTION
while getopts "x:u:i:p:c:s:d:e:f:g:h:j:k:L:m:n:O:q:r:t:" OPTION
do
     case $OPTION in
        x)
		cfg_val_port=$OPTARG
		;;
        u)
             	srv_username=$OPTARG
             	;;
        i)
             	srv_ip=$OPTARG
             	;;
        p)
             	srv_port=$OPTARG
             	;;
	c)
	     	cfg_file=$OPTARG
	     	;;
	s)
		cfg_sep=$OPTARG
		;;
	d)
		cfg_key_ip=$OPTARG
		;;
        e)
                cfg_key_port=$OPTARG
                ;;
        f)
                cfg_key_map=$OPTARG
                ;;
        g)
                cfg_key_maxpl=$OPTARG
                ;;
        h)
                cfg_key_rcon=$OPTARG
                ;;
        j)
                cfg_key_hostn=$OPTARG
                ;;
        k)
                cfg_val_ip=$OPTARG
                ;;
        L)
		cfg_port_value=$OPTARG
		;;
        m)
                cfg_val_map=$OPTARG
                ;;
        n)
                cfg_val_maxpl=$OPTARG
                ;;
        O)
                cfg_val_rcon=$OPTARG
                ;;
        q)
                cfg_val_hostn=$OPTARG
                ;;
	r)
		cfg_key_passw=$OPTARG
		;;
	t)
		cfg_val_passw=$OPTARG
		;;
        ?)
             	exit
             	;;
     esac
done

# Check empty
if [ "$cfg_file" == "" ]
then
	echo "ConfigUpdate: Config Filename (-c) was left out, exiting."
	exit
elif [ "$cfg_sep" == "" ]
then
        echo "ConfigUpdate: Config separator (-s) was left out, exiting."
        exit
fi

# Check gameserver dir
gpxdir=/usr/local/gpx/users/$srv_username/$srv_ip-$srv_port

if [ ! -d $gpxdir ]
then
        echo "ConfigUpdate: Server directory doesnt exist, exiting."
        exit
fi

# Set config file to full path
cfg_file="$gpxdir/$cfg_file"

# Ensure config exists
if [ ! -f $cfg_file ]
then
	# Do nothing, they can create configs manually if they want them updated+managed
	echo "success"
	exit

# 	# Optionally create config automatically and add in some defaults.  This was breaking some games, like Steam based games.  Removing this as it only adds complication.
# 	# NOTE: Uncomment these below (and the "exit" line above) if you want config files automatically created and populated with some basic defaults.
#
# 	# Create the config for them
# 	touch $cfg_file
# 
# 	# Add defaults if they are set
# 	if [ "$cfg_key_ip" ]; then echo $cfg_key_ip"$cfg_sep"$cfg_val_ip >> $cfg_file; fi
# 	if [ "$cfg_key_port" ]; then echo $cfg_key_port"$cfg_sep"$cfg_val_port >> $cfg_file; fi
# 	if [[ "$cfg_key_maxpl" && "$cfg_val_maxpl" ]]; then echo $cfg_key_maxpl"$cfg_sep"$cfg_val_maxpl >> $cfg_file; fi
# 	if [[ "$cfg_key_map" && "$cfg_val_map" ]]; then echo $cfg_key_map"$cfg_sep"$cfg_val_map >> $cfg_file; fi
# 	if [[ "$cfg_key_rcon" && "$cfg_val_rcon" ]]; then echo $cfg_key_rcon"$cfg_sep"$cfg_val_rcon >> $cfg_file; fi
# 	if [[ "$cfg_key_hostn" && "$cfg_val_hostn" ]]; then echo $cfg_key_hostn"$cfg_sep"$cfg_val_hostn >> $cfg_file; fi
# 	if [[ "$cfg_key_passw" && "$cfg_val_passw" ]]; then echo $cfg_key_passw"$cfg_sep"$cfg_val_passw >> $cfg_file; fi
fi

#################################################################################

# Normal key/vals
# Replace key=value with the correct key, separator, and value on this config
# e.g. ip=x.x.x.x
# Key being ip, separator being =, and value being x.x.x.x
if [ "$cfg_key_ip" ]; then sed -i "s/^$cfg_key_ip.*/$cfg_key_ip$cfg_sep$cfg_val_ip/g" $cfg_file; fi
if [ "$cfg_key_port" ]; then sed -i "s/^$cfg_key_port.*/$cfg_key_port$cfg_sep$cfg_val_port/g" $cfg_file; fi
if [ "$cfg_key_map" ]; then sed -i "s/^$cfg_key_map.*/$cfg_key_map$cfg_sep$cfg_val_map/g" $cfg_file; fi
if [ "$cfg_key_maxpl" ]; then sed -i "s/^$cfg_key_maxpl.*/$cfg_key_maxpl$cfg_sep$cfg_val_maxpl/g" $cfg_file; fi
if [ "$cfg_key_rcon" ]; then sed -i "s/^$cfg_key_rcon.*/$cfg_key_rcon$cfg_sep$cfg_val_rcon/g" $cfg_file; fi
if [ "$cfg_key_hostn" ]; then sed -i "s/^$cfg_key_hostn.*/$cfg_key_hostn$cfg_sep$cfg_val_hostn/g" $cfg_file; fi
if [ "$cfg_key_passw" ]; then sed -i "s/^$cfg_key_passw.*/$cfg_key_passw$cfg_sep$cfg_val_passw/g" $cfg_file; fi

#################################################################################

# XML Config files (such as Multi-Theft Auto/MTA).  Set "Config Separator" to "X" (caps matters) in default games to make it work with XML.
if [ "$cfg_sep" == "X" ]; then
	if [ "$cfg_key_ip" ]; then sed -i "s/<$cfg_key_ip>.*/<$cfg_key_ip>$cfg_val_ip<\/$cfg_key_ip>/g" $cfg_file; fi
	if [ "$cfg_key_port" ]; then sed -i "s/<$cfg_key_port>.*/<$cfg_key_port>$cfg_val_port<\/$cfg_key_port>/g" $cfg_file; fi
	if [ "$cfg_key_map" ]; then sed -i "s/<$cfg_key_map>.*/<$cfg_key_map>$cfg_val_map<\/$cfg_key_map>/g" $cfg_file; fi
	if [ "$cfg_key_maxpl" ]; then sed -i "s/<$cfg_key_maxpl>.*/<$cfg_key_maxpl>$cfg_val_maxpl<\/$cfg_key_maxpl>/g" $cfg_file; fi
	if [ "$cfg_key_rcon" ]; then sed -i "s/<$cfg_key_rcon>.*/<$cfg_key_rcon>$cfg_val_rcon<\/$cfg_key_rcon>/g" $cfg_file; fi
	if [ "$cfg_key_hostn" ]; then sed -i "s/<$cfg_key_hostn>.*/<$cfg_key_hostn>$cfg_val_hostn<\/$cfg_key_hostn>/g" $cfg_file; fi
	if [ "$cfg_key_passw" ]; then sed -i "s/<$cfg_key_passw>.*/<$cfg_key_passw>$cfg_val_passw<\/$cfg_key_passw>/g" $cfg_file; fi
fi

echo "success"
